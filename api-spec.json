{
  "openapi": "3.0.2",
  "info": {
    "title": "Football Quiz API Documentation",
    "description": "OpenAPI which contains complete documentation about all endpoints that can be used in this RESTful API.",
    "contact": {
      "name": "Andry Pebrianto",
      "url": "https://andrypebrianto.netlify.app",
      "email": "andryforwork227@gmail.com"
    },
    "license": {
      "name": "MIT License",
      "url": "https://opensource.org/license/mit"
    },
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://football-quiz.onrender.com/api/v1",
      "description": "Production API v1"
    },
    {
      "url": "http://localhost:5427/api/v1",
      "description": "Development API v1"
    }
  ],
  "paths": {
    "/google-auth": {
      "post": {
        "summary": "Google Auth",
        "tags": [
          "Auth"
        ],
        "description": "This endpoint is used to register and/or get jwt token for login with google auth.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "emailVerified": {
                    "type": "boolean"
                  }
                }
              },
              "examples": {
                "User 1": {
                  "description": "Google Auth Request Body Example 1",
                  "value": {
                    "name": "Andry Pebrianto",
                    "email": "aswassaw227@gmail.com",
                    "emailVerified": true
                  }
                },
                "User 2": {
                  "description": "Google Auth Request Body Example 2",
                  "value": {
                    "name": "Bagas Ihwaludin",
                    "email": "bagas225@gmail.com",
                    "emailVerified": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessWithToken"
                },
                "example": {
                  "code": 200,
                  "status": "success",
                  "message": "Login Success",
                  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjQ3ZjI2ZWI4LWU3ZWUtNGY0Mi1hN2VlLWMxYjg4ZDViM2EzNyIsImlhdCI6MTY5OTYxMjk0NywiZXhwIjoxNzAwMjE3NzQ3fQ.TYQQXUyQoW_3htIr_ovTFV4y6zr7fnTjanexylYyZLU"
                }
              }
            }
          },
          "201": {
            "description": "Register Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessWithToken"
                },
                "example": {
                  "code": 201,
                  "status": "success",
                  "message": "Register Success",
                  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjQ3ZjI2ZWI4LWU3ZWUtNGY0Mi1hN2VlLWMxYjg4ZDViM2EzNyIsImlhdCI6MTY5OTYxMjk2NywiZXhwIjoxNzAwMjE3NzY3fQ.2SK1ws-lDTybiLIyppr39KWnHLQ3Cl7XlkcX33oVAjQ"
                }
              }
            }
          },
          "400": {
            "description": "Validation Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Failure"
                },
                "example": {
                  "code": 400,
                  "status": "failed",
                  "message": "Validation Failed",
                  "error": "\"name\" is required"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Failure"
                },
                "example": {
                  "code": 500,
                  "status": "failed",
                  "message": "Internal Server Error",
                  "error": "An unknown error occurred"
                }
              }
            }
          }
        }
      }
    },
    "/check": {
      "get": {
        "summary": "Check Token",
        "tags": [
          "Auth"
        ],
        "description": "This endpoint is used to check whether the jwt token is still valid or not, also getting user data.",
        "responses": {
          "200": {
            "description": "Token Is Valid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "fullname": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "avatar": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "avatar_url": {
                              "type": "string"
                            },
                            "price": {
                              "type": "number"
                            },
                            "created_at": {
                              "type": "string"
                            },
                            "updated_at": {
                              "type": "string"
                            }
                          },
                          "nullable": true
                        },
                        "diamond": {
                          "type": "number"
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "code": 200,
                  "status": "success",
                  "message": "Token Is Valid",
                  "data": {
                    "id": "979688ea-7ab7-4e86-9165-25d94c6b9885",
                    "name": "Andry Pebrianto",
                    "email": "aswassaw227@gmail.com",
                    "diamond": 0,
                    "created_at": "2023-11-11T08:56:13.959Z",
                    "updated_at": "2023-11-11T08:56:13.959Z",
                    "avatar": null
                  }
                }
              }
            }
          },
          "401": {
            "description": "Access Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Failure"
                },
                "example": {
                  "code": 401,
                  "status": "failed",
                  "message": "Access Unauthorized",
                  "error": "JWT Token Invalid"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Failure"
                },
                "example": {
                  "code": 500,
                  "status": "failed",
                  "message": "Internal Server Error",
                  "error": "An unknown error occurred"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Token": []
          }
        ]
      }
    },
    "/update-profile": {
      "put": {
        "summary": "Update Profile",
        "tags": [
          "User"
        ],
        "description": "This endpoint is used to update user data name and avatar.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "avatar": {
                    "type": "string",
                    "nullable": true
                  }
                }
              },
              "examples": {
                "User 1": {
                  "description": "Update Profile Request Body Example 1",
                  "value": {
                    "name": "Andry Pebrianto",
                    "avatar": "060b0ae8-b626-4f4a-b357-3a7115021624"
                  }
                },
                "User 2": {
                  "description": "Update Profile Request Body Example 2",
                  "value": {
                    "name": "Bagas Ihwaludin"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update Profile Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                },
                "example": {
                  "code": 200,
                  "status": "success",
                  "message": "Update Profile Success"
                }
              }
            }
          },
          "400": {
            "description": "Validation Failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Failure"
                },
                "example": {
                  "code": 400,
                  "status": "failed",
                  "message": "Validation Failed",
                  "error": "\"fullName\" is required"
                }
              }
            }
          },
          "401": {
            "description": "Access Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Failure"
                },
                "example": {
                  "code": 401,
                  "status": "failed",
                  "message": "Access Unauthorized",
                  "error": "JWT Token Invalid"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Failure"
                },
                "example": {
                  "code": 500,
                  "status": "failed",
                  "message": "Internal Server Error",
                  "error": "An unknown error occurred"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Token": []
          }
        ]
      }
    },
    "/avatars": {
      "get": {
        "summary": "Find All Avatar",
        "tags": [
          "Avatar"
        ],
        "description": "This endpoint is used to find all avatar data.",
        "responses": {
          "200": {
            "description": "Token Is Valid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number"
                    },
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "avatar_url": {
                            "type": "string"
                          },
                          "avatar_name": {
                            "type": "string"
                          },
                          "price": {
                            "type": "number"
                          },
                          "created_at": {
                            "type": "string"
                          },
                          "updated_at": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "code": 200,
                  "status": "success",
                  "message": "Find All Avatar Success",
                  "data": [
                    {
                      "id": "692dc241-d271-44cf-a330-59a4f90f121c",
                      "avatar_url": "https://res.cloudinary.com/dogz0yvva/image/upload/v1699843618/football-quiz/cbzzoidd8xc9ocxxwhnf.png",
                      "avatar_name": "Manchester United",
                      "price": 20,
                      "created_at": "2023-11-12T19:46:59.000Z",
                      "updated_at": "2023-11-12T19:46:59.000Z"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Access Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Failure"
                },
                "example": {
                  "code": 401,
                  "status": "failed",
                  "message": "Access Unauthorized",
                  "error": "JWT Token Invalid"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Failure"
                },
                "example": {
                  "code": 500,
                  "status": "failed",
                  "message": "Internal Server Error",
                  "error": "An unknown error occurred"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer Token": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Success": {
        "type": "object",
        "properties": {
          "code": {
            "type": "number"
          },
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "SuccessWithToken": {
        "type": "object",
        "properties": {
          "code": {
            "type": "number"
          },
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        }
      },
      "Failure": {
        "type": "object",
        "properties": {
          "code": {
            "type": "number"
          },
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "error": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer Token": {
        "description": "Token To Authorized Private Endpoint",
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}